@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = "AAD Auth (Authentication/Authorization)";

    var appSettings = System.Configuration.ConfigurationManager.AppSettings;
    var backgroundColor = appSettings["background"] == null ? "#000000" : appSettings["background"]; 
    //new line second test

}

@using System.Security.Claims
@using System.Threading
@using System.Web.Configuration

<h1>Authentication and Authorization Demo (Easy-Auth)</h1>
<div class="container">

    <a href="http://@Environment.GetEnvironmentVariable("WEBSITE_SITE_NAME")-staging.azurewebsites.net/EasyAuth" target="_blank">Open Staging Slot</a>
    <br /><br />
    <div style="font-family:Arial; background: @backgroundColor; color:white;">
        @{
            var claimsPrincipal = Thread.CurrentPrincipal as ClaimsPrincipal;
            if (claimsPrincipal != null && claimsPrincipal.Identity.IsAuthenticated)
            {
                <h2 style="color:green">AAD Authentication Succeeded!</h2>
                <div><span><strong>Principal Name:</strong><br />@claimsPrincipal.Identity.Name</span></div>
                <div><span><a href="@WebConfigurationManager.AppSettings["WEBSITE_AUTH_LOGOUT_PATH"]">Logout</a></span></div>
                <br />
                <div><span><strong>x-ms-client-principal-name:</strong><br />@Request.Headers["X-MS-CLIENT-PRINCIPAL-NAME"]</span></div>
                <br />
                <div><strong>Raw Claims</strong></div>
                <table border="1">
                    <tbody>
                        @foreach (var claim in claimsPrincipal.Claims)
                        {
                            <tr>
                                <td>@claim.Type</td>
                                <td>@claim.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
            }
            else
            {
                <div style="color:red">Current request is unauthenticated!</div>
            }
        }


        <br />
        <div>
            <div><strong>Raw HTTP Headers</strong></div>
            <table border="1">

                <tbody>
                    @{
                        foreach (string header in this.Request.Headers)
                        {
                            <tr>
                                <td>@header</td>
                                <td>@this.Request.Headers[header]</td>
                            </tr>
                        }
                    }


                </tbody>

            </table>

        </div>

    </div>

</div>

